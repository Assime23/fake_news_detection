import streamlit as st
import requests
from streamlit_extras.colored_header import colored_header

# Configuration de la page
st.set_page_config(
    page_title="NewsCheck BF",
    page_icon="‚úÖ",
    layout="centered"
)

# Style CSS personnalis√©
st.markdown("""
<style>
    .stTextArea [data-baseweb=base-input] {
        background-color: #f9f9f9;
        border-radius: 10px;
    }
    .result-box {
        padding: 20px;
        border-radius: 10px;
        margin: 20px 0;
        font-size: 1.1em;
    }
    .fake-news {
        background-color: #ffebee;
        color: #c62828;
        border: 2px solid #ef9a9a;
    }
    .true-news {
        background-color: #e8f5e9;
        color: #2e7d32;
        border: 2px solid #a5d6a7;
    }
</style>
""", unsafe_allow_html=True)

# En-t√™te
colored_header(
    label="üì∞ NewsCheck Burkina Faso",
    description="V√©rifiez la cr√©dibilit√© des informations sur la s√©curit√©",
    color_name="blue-70"
)

# Zone de texte pour l'entr√©e utilisateur
texte_input = st.text_area(
    "Entrez le contenu √† v√©rifier :",
    placeholder="Exemple : 'Une attaque terroriste a √©t√© signal√©e √† Ouagadougou...'",
    height=150
)

# Bouton d'analyse
if st.button("üîç Analyser la cr√©dibilit√©", type="primary", use_container_width=True):
    if texte_input:
        with st.spinner("Analyse en cours..."):
            try:
                response = requests.post("http://127.0.0.1:5000/analyze", json={"texte": texte_input})
                
                if response.status_code == 200:
                    result = response.json()
                    confidence = round(float(result['confidence'].replace('%', '')), 1)
                    
                    # Affichage des r√©sultats
                    if result['prediction'] == 0:  # Fake News
                        st.markdown(f"""
                        <div class="result-box fake-news">
                            <h3>üö® Information potentiellement fausse</h3>
                            <p>Confiance : {confidence}%</p>
                        </div>
                        """, unsafe_allow_html=True)
                    else:  # True News
                        st.markdown(f"""
                        <div class="result-box true-news">
                            <h3>‚úÖ Information probablement fiable</h3>
                            <p>Confiance : {confidence}%</p>
                        </div>
                        """, unsafe_allow_html=True)
                    
                    # Barre de progression
                    st.progress(confidence / 100, text=f"Niveau de confiance : {confidence}%")
                else:
                    st.error("Erreur lors de l'analyse. Veuillez r√©essayer.")
            except Exception as e:
                st.error(f"Erreur de connexion : {str(e)}")
    else:
        st.warning("Veuillez entrer un texte √† analyser.")

# Section d'information
with st.expander("‚ÑπÔ∏è Comment √ßa marche ?"):
    st.markdown("""
    - **Analyse linguistique** : Utilisation de mod√®les IA avanc√©s.
    - **Base de donn√©es** : Comparaison avec des faits v√©rifi√©s.
    - **D√©tection** : Identification des marqueurs de d√©sinformation.
    """)

# Avertissement l√©gal
st.caption("‚ö†Ô∏è Cet outil fournit une indication automatis√©e. V√©rifiez toujours avec des sources officielles.")